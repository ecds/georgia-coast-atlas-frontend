import { landColors } from "./areas";
import type { LayerSpecification, StyleSpecification } from "maplibre-gl";
import chroma from "chroma-js";

export const base: StyleSpecification = {
  version: 8,
  name: "Default",
  center: [8.54806714892635, 47.37180823552663],
  zoom: 12.241790506353492,
  bearing: 0,
  pitch: 0,
  sources: {
    openmaptiles: {
      type: "vector",
      url: "https://d3j4mgzjrheeg2.cloudfront.net/georgia.json",
      promoteId: "id",
      attribution:
        '<a href="https://openfreemap.org/" target="_blank">&copy; OpenFreeMap!</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',
    },
  },
  layers: [
    // {
    //   id: "beaches",
    //   type: "fill",
    //   source: "openmaptiles",
    //   "source-layer": "landcover",
    //   filter: ["==", ["get", "class"], "beach"],
    //   layout: { visibility: "none" },
    //   paint: { "fill-color": landColors.island },
    // },
    {
      id: "water",
      type: "fill",
      source: "openmaptiles",
      "source-layer": "water",
      filter: [
        "all",
        ["==", ["geometry-type"], "Polygon"],
        ["!=", ["get", "brunnel"], "tunnel"],
        ["!=", ["get", "class"], "swimming_pool"],
      ],
      paint: { "fill-color": landColors.water },
    },
    {
      id: "waterway-tunnel",
      type: "line",
      source: "openmaptiles",
      "source-layer": "waterway",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        ["==", ["get", "brunnel"], "tunnel"],
      ],
      paint: {
        "line-color": landColors.water,
        "line-dasharray": [3, 3],
        "line-gap-width": ["interpolate", ["linear"], ["zoom"], 12, 0, 20, 6],
        "line-opacity": 1,
        "line-width": [
          "interpolate",
          ["exponential", 1.4],
          ["zoom"],
          8,
          1,
          20,
          2,
        ],
      },
    },
    {
      id: "tunnel_railway_transit",
      type: "line",
      source: "openmaptiles",
      "source-layer": "transportation",
      minzoom: 0,
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        ["==", ["get", "brunnel"], "tunnel"],
        ["==", ["get", "class"], "transit"],
      ],
      layout: { "line-cap": "butt", "line-join": "miter", visibility: "none" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-dasharray": [3, 3],
        "line-opacity": ["interpolate", ["linear"], ["zoom"], 11, 0, 16, 1],
      },
    },
    {
      id: "road_area_pier",
      type: "fill",
      metadata: {},
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["geometry-type"], "Polygon"],
        ["==", ["get", "class"], "pier"],
      ],
      layout: { visibility: "none" },
      paint: {
        "fill-antialias": true,
        "fill-color": chroma(landColors.road).shade(0.5).hex(),
      },
    },
    {
      id: "road_pier",
      type: "line",
      metadata: {},
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        ["match", ["get", "class"], ["pier"], true, false],
      ],
      layout: { "line-cap": "round", "line-join": "round", visibility: "none" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-width": [
          "interpolate",
          ["exponential", 1.2],
          ["zoom"],
          15,
          1,
          17,
          4,
        ],
      },
    },
    {
      id: "road_bridge_area",
      type: "fill",
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["geometry-type"], "Polygon"],
        ["match", ["get", "brunnel"], ["bridge"], true, false],
      ],
      layout: { visibility: "none" },
      paint: { "fill-color": chroma(landColors.road).shade(0.5).hex() },
    },
    {
      id: "road_minor",
      type: "line",
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        // ["!=", ["get", "access"], "False"],
        ["match", ["get", "class"], ["minor", "service"], true, false],
        // ["in", ["get", "service"], "[parking_aisle]"],
        ["!=", ["get", "service"], "driveway"],
      ],
      layout: { "line-cap": "round", "line-join": "round", visibility: "none" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-width": [
          "interpolate",
          ["exponential", 1.85],
          ["zoom"],
          4,
          0.25,
          20,
          30,
        ],
      },
    },
    {
      id: "road_trunk_primary",
      type: "line",
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        ["match", ["get", "class"], ["primary", "trunk"], true, false],
      ],
      layout: { "line-cap": "round", "line-join": "round", visibility: "none" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-width": [
          "interpolate",
          ["exponential", 1.4],
          ["zoom"],
          2,
          0.1,
          20,
          30,
        ],
      },
    },
    {
      id: "road_secondary_tertiary",
      type: "line",
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        // ["==", ["get", "class"], "secondary"],
        // ["in", ["get", "class"], "[secondary, tertiary]"],
        ["match", ["get", "class"], ["secondary", "tertiary"], true, false],
      ],
      layout: { "line-cap": "round", "line-join": "round" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-width": [
          "interpolate",
          ["exponential", 1.4],
          ["zoom"],
          6,
          0.5,
          20,
          20,
        ],
      },
    },
    {
      id: "road_major_motorway",
      type: "line",
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        ["==", ["get", "class"], "motorway"],
      ],
      layout: { "line-cap": "round", "line-join": "round", visibility: "none" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-offset": 0,
        "line-width": [
          "interpolate",
          ["exponential", 1.4],
          ["zoom"],
          2.2,
          0.5,
          16,
          10,
        ],
      },
    },
    {
      id: "railway_transit",
      type: "line",
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["get", "class"], "transit"],
        ["!=", ["get", "brunnel"], "tunnel"],
      ],
      layout: { visibility: "none" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-opacity": ["interpolate", ["linear"], ["zoom"], 11, 0, 16, 1],
      },
    },
    {
      id: "railway",
      type: "line",
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: ["==", ["get", "class"], "rail"],
      layout: { visibility: "none" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-opacity": ["interpolate", ["linear"], ["zoom"], 11, 0, 16, 1],
      },
    },
    {
      id: "waterway-bridge-case",
      type: "line",
      source: "openmaptiles",
      "source-layer": "waterway",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        ["==", ["get", "brunnel"], "bridge"],
      ],
      layout: { "line-cap": "butt", "line-join": "miter", visibility: "none" },
      paint: {
        "line-color": "#bbbbbb",
        "line-gap-width": [
          "interpolate",
          ["exponential", 1.55],
          ["zoom"],
          4,
          0.25,
          20,
          30,
        ],
        "line-width": [
          "interpolate",
          ["exponential", 1.6],
          ["zoom"],
          12,
          0.5,
          20,
          10,
        ],
      },
    },
    {
      id: "waterway-bridge",
      type: "line",
      source: "openmaptiles",
      "source-layer": "waterway",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        ["==", ["get", "brunnel"], "bridge"],
      ],
      layout: { "line-cap": "round", "line-join": "round", visibility: "none" },
      paint: {
        "line-color": "hsl(205,56%,73%)",
        "line-width": [
          "interpolate",
          ["exponential", 1.55],
          ["zoom"],
          4,
          0.25,
          20,
          30,
        ],
      },
    },
    {
      id: "bridge_minor",
      type: "line",
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        [
          "all",
          ["==", ["get", "brunnel"], "bridge"],
          ["==", ["get", "class"], "minor_road"],
        ],
      ],
      layout: { "line-cap": "round", "line-join": "round", visibility: "none" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-width": [
          "interpolate",
          ["exponential", 1.55],
          ["zoom"],
          4,
          0.25,
          20,
          30,
        ],
      },
    },
    {
      id: "bridge_major",
      type: "line",
      source: "openmaptiles",
      "source-layer": "transportation",
      filter: [
        "all",
        ["==", ["geometry-type"], "LineString"],
        [
          "all",
          ["==", ["get", "brunnel"], "bridge"],
          [
            "match",
            ["get", "class"],
            ["primary", "secondary", "tertiary", "trunk"],
            true,
            false,
          ],
        ],
      ],
      layout: { "line-cap": "round", "line-join": "round", visibility: "none" },
      paint: {
        "line-color": chroma(landColors.road).shade(0.5).hex(),
        "line-width": [
          "interpolate",
          ["exponential", 1.4],
          ["zoom"],
          6,
          0.5,
          20,
          30,
        ],
      },
    },
  ],
};

export const water: LayerSpecification[] = [
  {
    id: "creeks",
    type: "line",
    source: "openmaptiles",
    "source-layer": "waterway",
    filter: [
      "all",
      ["==", ["geometry-type"], "LineString"],
      ["match", ["get", "brunnel"], ["bridge", "tunnel"], false, true],
    ],
    paint: {
      "line-color": landColors.water,
      "line-opacity": 1,
      "line-width": ["interpolate", ["exponential", 1], ["zoom"], 8, 1, 20, 8],
    },
  },
  {
    id: "intermittent",
    type: "line",
    source: "openmaptiles",
    "source-layer": "waterway",
    filter: ["all", ["==", ["get", "intermittent"], 1]],
    paint: {
      "line-color": landColors.water,
      "line-opacity": 1,
      "line-width": ["interpolate", ["exponential", 1], ["zoom"], 8, 1, 20, 8],
    },
  },
];
