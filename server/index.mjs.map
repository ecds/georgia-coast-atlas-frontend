{
  "version": 3,
  "sources": ["empty-module:~/components/MapPane.client", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/data/islands.ts", "../app/routes/$island.tsx", "../node_modules/remix-utils/build/react/client-only.js", "../node_modules/remix-utils/build/react/use-hydrated.js", "../app/routes/_index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["module.exports = {};", "// @ts-nocheck\nimport { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\nimport { installGlobals } from \"@remix-run/node\";\nimport sourceMapSupport from \"source-map-support\";\n\nsourceMapSupport.install();\ninstallGlobals();\n\nexport const handler = createRequestHandler({\n  build,\n  mode: build.mode,\n});\n", "\nimport * as entryServer from \"/Users/jay/data/georgia-coast-atlas-frontend/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/$island.tsx\";\nimport * as route2 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false};\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/$island\": {\n      id: \"routes/$island\",\n      parentId: \"root\",\n      path: \":island\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { isbot } from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  // This is ignored so we can keep it in the template for visibility.  Feel\n  // free to delete this parameter in your app if you're not using it!\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\") || \"\")\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Link,\n  Links,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport Islands from \"./data/islands\";\nimport styles from \"./tailwind.css\";\nimport type { LinksFunction } from \"@remix-run/node\";\n\nexport const links: LinksFunction = () => [{ rel: \"stylesheet\", href: styles }];\n\nexport function Layout({ children }: {children: React.ReactNode;}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"bg-slate-600\">\n        <a href=\"#main\" className=\"sr-only\">\n          skip to main content\n        </a>\n        <nav className=\"bg-gray-800 fixed top-0 w-screen z-50 p-6 h-20\">\n          <ul className=\"flex flex-row space-x-6 uppercase\">\n            <li className=\"text-gray-300\">\n              <Link to=\"/\">home</Link>\n            </li>\n            {Islands.map((island) => {\n              return (\n                <li key={island.slug} className=\"text-gray-300\">\n                  <Link to={`${island.slug}-island`}>\n                    {island.label} Island\n                  </Link>\n                </li>);\n\n            })}\n          </ul>\n        </nav>\n        <main className=\"mx-auto relative mt-20 bg-white\" id=\"main\">\n          {children}\n        </main>\n        <ScrollRestoration />\n        <Scripts />\n      </body>\n    </html>);\n\n}\n\nexport default function App() {\n  return <Outlet />;\n}", "const Islands = [\n  { slug: \"ossabaw\", label: \"Ossabaw\" },\n  { slug: \"sapelo\", label: \"Sapelo\" },\n  { slug: \"st-catherines\", label: \"St. Catherine's\" },\n  { slug: \"wassaw\", label: \"Wassaw\" },\n  { slug: \"wolf\", label: \"Wolf\" },\n];\n\nexport default Islands;\n", "import { useLoaderData, useLocation } from \"@remix-run/react\";\nimport { ClientOnly } from \"remix-utils/client-only\";\nimport MapPane from \"~/components/MapPane.client\";\n\nexport const loader = async ({ params }) => {\n  const response = await fetch(\n    `https://wp.georgiacoastatlas.org/wp-json/wp/v2/pages/?slug=${params.island}`\n  );\n  const data = await response.json();\n  return data[0] || null;\n};\nconst IslandPage = () => {\n  const location = useLocation();\n  const wpContent = useLoaderData<typeof loader>(location);\n  return (\n    <div className=\"flex flex-row overflow-hidden h-[calc(100vh-5rem)]\">\n      <div className=\"basis-1/2 overflow-scroll\">\n        <h1 className=\"text-2xl my-2 p-4 sticky top-0 bg-white z-10\">\n          {wpContent.title.rendered}\n        </h1>\n        <div\n          className=\"relative p-4\"\n          dangerouslySetInnerHTML={{\n            __html: wpContent.content.rendered,\n          }}\n        />\n      </div>\n      <div className=\"basis-1/2\">\n        <ClientOnly>{() => <MapPane />}</ClientOnly>\n      </div>\n    </div>\n  );\n};\n\nexport default IslandPage;\n", "import * as React from \"react\";\nimport { useHydrated } from \"./use-hydrated.js\";\n/**\n * Render the children only after the JS has loaded client-side. Use an optional\n * fallback component if the JS is not yet loaded.\n *\n * Example: Render a Chart component if JS loads, renders a simple FakeChart\n * component server-side or if there is no JS. The FakeChart can have only the\n * UI without the behavior or be a loading spinner or skeleton.\n * ```tsx\n * return (\n *   <ClientOnly fallback={<FakeChart />}>\n *     {() => <Chart />}\n *   </ClientOnly>\n * );\n * ```\n */\nexport function ClientOnly({ children, fallback = null }) {\n    return useHydrated() ? React.createElement(React.Fragment, null, children()) : React.createElement(React.Fragment, null, fallback);\n}\n", "import { useSyncExternalStore } from \"react\";\nfunction subscribe() {\n    return () => { };\n}\n/**\n * Return a boolean indicating if the JS has been hydrated already.\n * When doing Server-Side Rendering, the result will always be false.\n * When doing Client-Side Rendering, the result will always be false on the\n * first render and true from then on. Even if a new component renders it will\n * always start with true.\n *\n * Example: Disable a button that needs JS to work.\n * ```tsx\n * let hydrated = useHydrated();\n * return (\n *   <button type=\"button\" disabled={!hydrated} onClick={doSomethingCustom}>\n *     Click me\n *   </button>\n * );\n * ```\n */\nexport function useHydrated() {\n    return useSyncExternalStore(subscribe, () => true, () => false);\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nexport const loader = async () => {\n  const response = await fetch(\n    \"https://wp.georgiacoastatlas.org/wp-json/wp/v2/pages/?slug=homepage\"\n  );\n  const data = await response.json();\n  return data[0] || null;\n};\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"New Remix App\" },\n    { name: \"description\", content: \"Welcome to Remix!\" },\n  ];\n};\n\nexport default function Index() {\n  const wpContent = useLoaderData<typeof loader>();\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{\n        __html: wpContent.content.rendered,\n      }}\n    />\n  );\n}\n", "export default {'entry':{'module':'/_static/build/entry.client-QT3BEKWR.js','imports':['/_static/build/_shared/chunk-DNAE3F2W.js','/_static/build/_shared/chunk-GZSDHSPR.js','/_static/build/_shared/chunk-OYBGF6RY.js','/_static/build/_shared/chunk-67UFEV6D.js','/_static/build/_shared/chunk-6DJ4OLSI.js','/_static/build/_shared/chunk-VDD37JSE.js','/_static/build/_shared/chunk-HZFP33RY.js','/_static/build/_shared/chunk-WN4IQK2U.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-UY5RJ6B2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/$island':{'id':'routes/$island','parentId':'root','path':':island','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/$island-3C3PDIQE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/_index-W5XRB6LD.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'3e8f9ce5','hmr':{'runtime':'/_static/build/_shared/chunk-6DJ4OLSI.js','timestamp':1711551814852},'url':'/_static/build/manifest-3E8F9CE5.js'};"],
  "mappings": "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",
  "names": ["jsxDEV", "jsxDEV", "MapPane", "loader", "useLoaderData", "jsxDEV"]
}
